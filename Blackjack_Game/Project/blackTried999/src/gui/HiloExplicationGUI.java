/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;

/**
 *
 * @author Daniel
 */
public class HiloExplicationGUI extends javax.swing.JFrame {

    /**
     * Creates new form HiloExplicationGUI
     */
    public HiloExplicationGUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        explicationPanel = new javax.swing.JPanel();
        title = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        explicationPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        title.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        title.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        title.setText("EXPLICACIÓN DE MÉTODO DE CONTEO \"HI-LO\"");
        explicationPanel.add(title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 30));

        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Monospaced", 1, 13)); // NOI18N
        jTextArea2.setRows(5);
        jTextArea2.setText("(-1) A las cartas altas. (+1) A las cartas bajas. (0) A las cartas restantes\n\n-Nuestro objetivo es llevar la cuenta de todas las cartas incluyendo las del dealer. Este sistema\ntraduce el conteo de las cartas llevadas a conocimiento aproximado de cuantas cartas quedan en el \nmazo.\n\nSi el conteo es (+) significa que se han utilizado más cartas altas, la mayoría de casos no nos\ninteresa jugar. Si el conteo es (-) quiere decir que hay más cartas altas que bajas, la mayoría\nde casos nos interesa jugar.\n\nEl objetivo mayor es acumular en esa cuenta un número positivo lo más grande posible que nos ofre-\nce mayores probabilidades de obtener Blackjack. Si lo conseguimos podemos decir que la mesa está\ncaliente y podemos modificar la estrategia básica a nuestro interés, por ejemplo, doblar la apu-\nesta o apostar a seguro. Como el Blackjack se paga 3 a 2 y los casos de empate son poco probables\ntenemos por primera vez un sistema de juego con una ganancia esperada superior a la banca\n\nEl sistema equilibria 5 cartas altas y 5 cartas bajas, las demás cartas pasan a ser nulas...\n\t(+1): 2, 3, 4, 5, 6\n\t(-1): J, Q, J, A, 10\n\t(0):  7, 8, 9\n\nEn el caso de jugar con varias barajas hay que tener en cuenta que no es lo mismo una suma con 4\nbarajas pendientes, que la misma suma con 1. Por eso hay que dividir la suma entre el número de\nbarajas que creemos que puedan salir, y esta será la cuenta real");
        jTextArea2.setEnabled(false);
        jScrollPane2.setViewportView(jTextArea2);

        explicationPanel.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 30, 800, 460));

        getContentPane().add(explicationPanel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 530));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HiloExplicationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HiloExplicationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HiloExplicationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HiloExplicationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HiloExplicationGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel explicationPanel;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JLabel title;
    // End of variables declaration//GEN-END:variables
}
